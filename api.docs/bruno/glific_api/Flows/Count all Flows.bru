meta {
  name: Count all Flows
  type: graphql
  seq: 3
}

post {
  url: {{api_url}}
  body: graphql
  auth: none
}

headers {
  authorization: {{auth_token}}
  Content-Type: application/json
}

body:graphql {
  query countFlows($filter: FlowFilter) {
    countFlows(filter: $filter)
  }
}

body:graphql:vars {
  {
    "id": 1
  }
}

docs {
  # Count all Flows
  
  ## Description
  This GraphQL API is used to count all flows based on specified filters.
  
  ## Base URL
  `{{api_url}}`
  
  ## URL
  (No specific URL for GraphQL, as it is usually handled by a single endpoint.)
  
  ## Parameters
  | Parameter | Type                                 | Default | Description                         |
  | --------- | ------------------------------------ | ------- | ----------------------------------- |
  | `filter`    | FlowFilter | nil     | filter the list                     |
  
  ## Filtering Options for Flows
  
  | Field                 | Type    | Description                                                       |
  | --------------------- | ------- | ----------------------------------------------------------------- |
  | `isActive`            | Boolean | Filter by whether the flow is active.                             |
  | `isBackground`        | Boolean | Filter by whether the flow runs in the background.                |
  | `isPinned`            | Boolean | Filter by whether the flow is pinned.                             |
  | `keyword`             | String  | Filter by a keyword.                                              |
  | `name`                | String  | Filter by the name of the flow.                                   |
  | `nameOrKeywordOrTags` | String  | Filter by the name, keyword, or tags associated with the flow.    |
  | `status`              | String  | Filter by the status of the flow.                                 |
  | `tagIds`              | [Int]   | Filter by the IDs of tags associated with the flow.               |
  | `uuid`                | UUID4   | Filter by the UUID of the flow.                                   |
  
  
  ## Request Example
  ```bash
  curl -X POST {{api_url}} \
      -H "Authorization: {{auth_token}}" \
      -H "Content-Type: application/json" \
      -d '{
          "query": "query countFlows($filter: FlowFilter) { countFlows(filter: $filter) }",
          "variables": {
              "filter": {
                  "id": 1
              }
          }
      }'
  ```
  
  ## Request Variables
  ```json
  {
    "filter": {
      "id": 1
    }
  }
  ```
  
  ## Response
  The API response includes the count of all flows based on the specified filter.
  ```json
  {
    "data": {
      "countFlows": 2
    }
  }
  ```
  
  ## Error Codes
  No specific HTTP status codes mentioned for GraphQL, check the `errors` field in the response.
  
  ## Use Cases
  1. **Use Case 1: Count all Flows**
     - Count all flows based on specified filters.
  
  ## FAQ
  
  ### Filter Flows
  1. **How can I filter flows?**
     - Use the `filter` parameter to specify conditions for counting flows.
}
