meta {
  name: Count all Contacts
  type: graphql
  seq: 6
}

post {
  url: {{api_url}}
  body: graphql
  auth: none
}

headers {
  authorization: {{auth_token}}
  Content-Type: application/json
}

body:graphql {
  query countContacts($filter: ContactFilter) {
    countContacts(filter: $filter)
  }
}

body:graphql:vars {
  {
    "filter": {
      "status": "VALID"
    }
  }
}

docs {
  # Count all Contacts
  
  ## Description
  This GraphQL API is used to retrieve the count of contacts based on specified filters.
  
  ## Base URL
  `{{api_url}}`
  
  ## URL
  (No specific URL for GraphQL, as it is usually handled by a single endpoint.)
  
  ## Parameters
  
  | Parameter | Type           | Description                                |
  |-----------|----------------|--------------------------------------------|
  | `filter`  | ContactFilter  | Filters to apply for counting contacts.    |
  
  ## Request Example
  ```bash
  curl -X POST {{api_url}} \
      -H "Authorization: {{auth_token}}" \
      -H "Content-Type: application/json" \
      -d '{
          "query": "query countContacts($filter: ContactFilter) { countContacts(filter: $filter) }",
          "variables": {
              "filter": {
                  "status": "VALID"
              }
          }
      }'
  ```
  
  ## Request Variables
  ```json
  {
    "filter": {
      "status": "VALID"
    }
  }
  ```
  
  ## Response
  The API response includes the count of contacts based on the specified filter.
  
  ## Error Codes
  No specific HTTP status codes mentioned for GraphQL, check the `errors` field in the response.
  
  ## Use Cases
  1. **Use Case 1: Count Contacts**
     - Retrieve the count of contacts based on specified filters.
  
  ## FAQ
  1. **Filter Contacts**
     - **Q:** How can I filter contacts?
     - **A:** Use the `filter` parameter to specify conditions for counting contacts.
  
  2. **Authorization**
     - **Q:** Do I need to authenticate for this operation?
     - **A:** No authentication is required (`auth: none`) for this operation.
  
}
