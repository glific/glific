meta {
  name: Create a Contacts
  type: graphql
  seq: 7
}

post {
  url: {{api_url}}
  body: graphql
  auth: none
}

headers {
  authorization: {{auth_token}}
  Content-Type: application/json
}

body:graphql {
  mutation createContact($input:ContactInput!) {
    createContact(input: $input) {
      contact {
        id
        name
        optinTime
        optoutTime
        phone
        bspStatus
        status
        tags {
          id
          label
        }
      }
      errors {
        key
        message
      }
    }
  }
}

body:graphql:vars {
  {
    "input": {
      "name": "This is a new contact for this example",
      "phone": "9876543232"
    }
  }
}

docs {
  # Create a Contact
  
  ## Description
  This GraphQL API is used to create a new contact with specified details.
  
  ## Base URL
  `{{api_url}}`
  
  ## URL
  (No specific URL for GraphQL, as it is usually handled by a single endpoint.)
  
  ## Parameters
  
  | Parameter | Type        | Description                         |
  |-----------|-------------|-------------------------------------|
  | `input`   | ContactInput| Input data for creating a contact.   |
  
  ## Input Fields
  
  | Field           | Type                      | Description                                         |
  | --------------- | ------------------------- | --------------------------------------------------- |
  |`activeProfileId`| ID                        | The ID of the active profile associated with the contact. |
  |`bspStatus`      | ContactProviderStatusEnum | The status of the contact provider.                |
  |`fields`         | Json                      | Additional fields associated with the contact.      |
  | `languageId`    | ID                        | The ID of the language associated with the contact. |
  |`name`          | String                    | The name of the contact.                            |
  | `phone`         | String                    | The phone number of the contact.                    |
  | `settings `       | Json                      | Settings associated with the contact.               |
  | `status `         | ContactStatusEnum         | The status of the contact.                          |
  
  
  ## Request Example
  ```bash
  curl -X POST {{api_url}} \
      -H "Authorization: {{auth_token}}" \
      -H "Content-Type: application/json" \
      -d '{
          "query": "mutation createContact($input: ContactInput!) { createContact(input: $input) { contact { id name optinTime optoutTime phone bspStatus status tags { id label } } errors { key message } } }",
          "variables": {
              "input": {
                  "name": "This is a new contact for this example",
                  "phone": "9876543232"
              }
          }
      }'
  ```
  
  ## Request Variables
  ```json
  {
    "input": {
      "name": "This is a new contact for this example",
      "phone": "9876543232"
    }
  }
  ```
  ## Response
  The API response includes the details of the created contact and any encountered errors.
  ```json
  {
    "data": {
      "createContact": {
        "contact": {
          "id": "15",
          "name": null,
          "optinTime": null,
          "optoutTime": null,
          "phone": "9876543232",
          "bspStatus": "SESSION",
          "status": null,
          "tags": []
        },
        "errors": null
      }
    }
  }
  ```
  
  ## Error Codes
  No specific HTTP status codes mentioned for GraphQL, check the `errors` field in the response.
  
  ## Use Cases
  1. **Use Case 1: Create a Contact**
     - Create a new contact with specified details.
  
  ## FAQ
  1. **Input Data**
     - **Q:** What data do I need to provide to create a contact?
     - **A:** Use the `input` parameter with the required fields for creating a contact. The input table has all fields.
  
  2. **Error Handling**
     - **Q:** How are errors handled during contact creation?
     - **A:** Check the `errors` field in the response for any encountered errors.
  
}
