name: Continuous Deployment

on:
  pull_request:
    types: [labeled, opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  deploy:
    # only run this job if the verify job succeeds

    # only run this job if the workflow is running on the feature/master branch or
    # a branch which has staging has label
    if: |
      (
        github.event_name == 'pull_request' &&
        contains(join(github.event.pull_request.labels.*.name, ','), 'staging')
      ) || (
        github.event_name == 'push' &&
        github.ref == 'refs/heads/master'
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'push' && 'master' || github.event.pull_request.head.ref }} # Checkout out master or the PR commit
          fetch-depth: 0 # Checkout the whole branch

      # setup  python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # configure the gigalixir-actions with our credentials and app name
      - uses: mhanberg/gigalixir-action@v0.6.2
        with:
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APPNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: false

      # Remove unattended-upgrades
      - name: remove unattended-upgrades
        run: sudo apt-get -y remove unattended-upgrades

      # Install ffmpeg for file conversion
      - name: install ffmpeg
        run: |
          sudo sed -i 's|mirror+file:/etc/apt/apt-mirrors.txt|http://archive.ubuntu.com/ubuntu|g' /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get -y install ffmpeg
